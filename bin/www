#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('sequelize-sqlite-express-demo:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

 var port = parseInt(process.env.PORT, 10) || 3000;
 app.set('port', port);


/**
 * Sequelize
 */

var models = require("../models"), server;
models.sequelize.authenticate()
.complete(function(err) {
  if (err) {
    console.log('Unable to connect to the database:', err);
  } else {
    console.log('Connection has been established successfully.');
    models.sequelize.sync().then(function () {
      /**
      * Create HTTP server.
      */

      server = http.createServer(app);

      /**
      * Listen on provided port, on all network interfaces.
      */

      server.listen(port);
      server.on('error', onError);
      server.on('listening', onListening);
    });
  }
});


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}
